[{"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\index.js":"1","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\reportWebVitals.js":"2","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\App.js":"3","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\routes.js":"4","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\ViewPage.js":"5","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\SelectViewPage.js":"6","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\hooks\\http.hook.js":"7","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\hooks\\message.hook.js":"8","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\components\\Loader.js":"9","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\TimeBlock.js":"10","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\ClassBlock.js":"11","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\SpecialCourseTable.js":"12"},{"size":287,"mtime":1611564706128,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":345,"mtime":1614944299847,"results":"16","hashOfConfig":"14"},{"size":510,"mtime":1613384758276,"results":"17","hashOfConfig":"14"},{"size":9925,"mtime":1614944299673,"results":"18","hashOfConfig":"14"},{"size":3188,"mtime":1614944299744,"results":"19","hashOfConfig":"14"},{"size":1069,"mtime":1601362997983,"results":"20","hashOfConfig":"14"},{"size":192,"mtime":1610445345776,"results":"21","hashOfConfig":"14"},{"size":580,"mtime":1601362997973,"results":"22","hashOfConfig":"14"},{"size":619,"mtime":1614062389433,"results":"23","hashOfConfig":"14"},{"size":803,"mtime":1614061210342,"results":"24","hashOfConfig":"14"},{"size":1018,"mtime":1614061387688,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1uxm1r4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\index.js",[],["58","59"],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\reportWebVitals.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\App.js",["60"],"import React, {useEffect} from 'react';\nimport {useRoutes} from \"./routes\";\nimport {BrowserRouter as Roter} from 'react-router-dom';\nimport 'materialize-css';\n\nexport default function App() {\n    const routes = useRoutes();\n\n    return (\n        <Roter>\n            <div>\n                {routes}\n            </div>\n        </Roter>\n    );\n}\n\n\n\n","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\routes.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\ViewPage.js",["61","62","63","64"],"import React, {useCallback, useEffect, useRef, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport style1 from './Themes/style1.module.css'\r\nimport style2 from './Themes/style2.module.css'\r\nimport style3 from './Themes/style3.module.css'\r\nimport style4 from './Themes/style4.module.css'\r\nimport {TimeBlock} from \"./TimeBlock\";\r\nimport {ClassBlock} from \"./ClassBlock\";\r\nimport {SpecialCourseTable} from \"./SpecialCourseTable\";\r\nimport settings from '../config/settings.json'\r\n\r\n\r\nexport const ViewPage = () => {\r\n    document.getElementById('bodyId').className = 'whiteBack'\r\n    const style = {style1, style2, style3, style4}\r\n    const {request} = useHttp();\r\n    const [view, setView] = useState({\r\n        date: new Date(),\r\n        session: '',\r\n        editDate: '',\r\n        times: [],\r\n        classrooms: []\r\n    });\r\n    const [clock, setClock] = useState({\r\n        clock: new Date().toLocaleString(\"ru\", {hour: 'numeric', minute: 'numeric'}),\r\n        clockDate: new Date().toLocaleString(\"ru\", {year: 'numeric', month: 'long', day: 'numeric'}),\r\n        clockDay: new Date().toLocaleString(\"ru\", {weekday: 'long'})\r\n    });\r\n    const [announcement, setAnnouncement] = useState({\r\n        announcements: [],\r\n        announcementDir: ''\r\n    });\r\n    const [announcementText, setAnnouncementText] = useState({text: '', date: new Date() - 55000});\r\n    const [specialCourses, setSpecialCourses] = useState({day: '', course: []})\r\n    const [count, setCount] = useState({count: 0});\r\n    const [countAd, setCountAd] = useState({count: 0});\r\n    const [dir, setDir] = useState({name: '', text: '', urlImage: ''});\r\n\r\n    const [ad, setAd] = useState({ad: []});\r\n    const [adImage, setAdImage] = useState({url: '', date: new Date() - 70000});\r\n    const schoolId = useParams().id;\r\n    const theme = useParams().name;\r\n    const [school, setSchool] = useState({\r\n        name: ''\r\n    })\r\n\r\n    const [flagAd, setFlagAd] = useState(false);\r\n    const [flagDirImage, setFlagDirImage] = useState(false);\r\n    const [flagView, setFlagView] = useState(false);\r\n    const [flagAnnouncement, setFlagAnnouncement] = useState(false);\r\n    const [flagSpecialCourse, setFlagSpecialCourse] = useState(false);\r\n\r\n\r\n    const getData = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/view/get/${schoolId}`, 'GET', null);\r\n            setView({...fetched, date: new Date()});\r\n            setFlagView(fetched.isDataReady)\r\n            setSchool({name: fetched.school})\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [schoolId, request]);\r\n\r\n    const getDataDirector = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/dir/get_data/${schoolId}`, 'GET', null);\r\n            setDir({...fetched, urlImage: settings.url + fetched.urlImage});\r\n            setFlagDirImage(fetched.isDataReady);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [schoolId, request]);\r\n\r\n    const getDataAd = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/ad/get_data_ad/${schoolId}`, 'GET', null, {\"Content-Type\": \"text/plain\"});\r\n            setAd({ad: fetched.ad});\r\n            setFlagAd(fetched.isDataReady)\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }, [schoolId, request]);\r\n\r\n    const getDataAnnouncement = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/view/get_announcement/${schoolId}`, 'GET', null);\r\n            setAnnouncement(fetched);\r\n            setAnnouncementText({text: fetched.announcements[count.count], date: new Date()});\r\n            setFlagAnnouncement(fetched.isDataReady);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [schoolId, request]);\r\n\r\n    const getSpecialCourses = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/special_course/get/${schoolId}`, 'GET', null)\r\n            setSpecialCourses(fetched)\r\n            setFlagSpecialCourse(fetched.isDataReady)\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [schoolId, request])\r\n\r\n\r\n    const clockLauncher = () => {\r\n        let timerID = setInterval(() => tick(), 1000)\r\n        return () => clearInterval(timerID)\r\n    };\r\n\r\n    const tick = () => {\r\n        let date = new Date();\r\n        setClock({\r\n            clock: date.toLocaleString(\"ru\", {hour: 'numeric', minute: 'numeric', second: 'numeric'}),\r\n            clockDate: date.toLocaleString(\"ru\", {year: 'numeric', month: 'long', day: 'numeric'}),\r\n            clockDay: date.toLocaleString(\"ru\", {weekday: 'long'})\r\n        });\r\n    }\r\n\r\n    const announcementSwitcher = () => {\r\n        try {\r\n            setAnnouncementText({text: announcement.announcements[count.count], date: new Date()});\r\n            setCount({count: count.count + 1});\r\n            if (count.count === announcement.announcements.length - 1) {\r\n                setCount({count: 0});\r\n            }\r\n        } catch (e) {\r\n        }\r\n    };\r\n\r\n    const adSwitcher = () => {\r\n        try {\r\n            setAdImage({url: `${settings.url}/api/ad/get/${ad.ad[countAd.count]._id}`, date: new Date()});\r\n            setFlagAd(true);\r\n            setCountAd({count: countAd.count + 1});\r\n            if (countAd.count === ad.ad.length - 1) {\r\n                setCountAd({count: 0});\r\n            }\r\n        } catch (e) {\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        getDataDirector();\r\n        getDataAnnouncement();\r\n        getDataAd();\r\n        getSpecialCourses();\r\n    }, [getData, getDataDirector, getDataAnnouncement, getDataAd, getSpecialCourses]);\r\n\r\n\r\n    useEffect(() => {\r\n        clockLauncher();\r\n        if (new Date() - view.date >= 60000) {\r\n            setView({...view, date: new Date()});\r\n            getData();\r\n            getDataAnnouncement();\r\n            getDataAd();\r\n            getDataDirector();\r\n            getSpecialCourses();\r\n        }\r\n\r\n        if (new Date() - announcementText.date >= 60000) {\r\n            announcementSwitcher();\r\n        }\r\n        if (new Date() - adImage.date >= 60000) {\r\n            adSwitcher();\r\n        }\r\n    });\r\n\r\n    if (!flagAd || !flagDirImage || !flagView || !flagAnnouncement) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header className={style[theme].header}>\r\n                <div className={style[theme].timetable}>\r\n                    Расписание занятий\r\n                </div>\r\n                <hr className={style[theme].hr}/>\r\n                <div id=\"time\" className={style[theme].time}>\r\n                    {clock.clock} | {clock.clockDate} | {clock.clockDay} | <h6 style={{display: 'inline-block'}}\r\n                                                                               className=\"red-text\">{view.editDate}</h6>\r\n                </div>\r\n            </header>\r\n\r\n            <div className={style[theme].container}>\r\n                <div className={style[theme].logo}>\r\n                    <img src={dir.urlImage} alt=\"logo\"/>\r\n                    <h4>{school.name}</h4>\r\n                </div>\r\n\r\n                <div className={style[theme].attention}>\r\n                    <div className={style[theme].mainAtt}>Объявление</div>\r\n                    <div className={style[theme].txt}>{announcementText.text}</div>\r\n                </div>\r\n\r\n                <div className={style[theme].director}>\r\n                    <h3>Директор</h3>\r\n                    <h5>\r\n                        <svg className={style[theme].phone}/>\r\n                        {dir.phone}\r\n                    </h5>\r\n                    <h5>\r\n                        <svg className={style[theme].email}/>\r\n                        {dir.email}\r\n                    </h5>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={style[theme].firstTable}>\r\n                <TimeBlock time={view.times}  style={style[theme]}/>\r\n                {Array.from(view.classrooms[0], classroom => {\r\n                    return (\r\n                        <div key={classroom.index}>\r\n                            <ClassBlock\r\n                                style={style[theme]}\r\n                                classroomName={classroom.name}\r\n                                subjects={classroom.subjects}\r\n                                time={view.times}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className={style[theme].secondTable}>\r\n\r\n                <TimeBlock time={view.times}  style={style[theme]}/>\r\n                {Array.from(view.classrooms[1], classroom => {\r\n                    return (\r\n                        <div key={classroom.index}>\r\n                            <ClassBlock\r\n                                style={style[theme]}\r\n                                classroomName={classroom.name}\r\n                                subjects={classroom.subjects}\r\n                                time={view.times}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n\r\n\r\n            <footer className={style[theme].foot}>\r\n                <SpecialCourseTable\r\n                    style={style[theme]}\r\n                    course={specialCourses}\r\n                />\r\n                <div className={style[theme].ad}>\r\n                    <img src={adImage.url} alt=\"ad\"/>\r\n                </div>\r\n                <div className={style[theme].qr}>\r\n                    <img\r\n                        src=\"http://qrcoder.ru/code/?localhost%3A3000&8&0\"\r\n                        alt=\"qr\"/>\r\n                </div>\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n};","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\SelectViewPage.js",["65","66","67"],"import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport Select from \"react-select\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport style from './Themes/SelectsViewPage.module.css'\r\nimport settings from '../config/settings.json'\r\n\r\nexport const SelectViewPage = () => {\r\n    document.getElementById('bodyId').className = 'anotherBack'\r\n    const message = useMessage();\r\n    const history = useHistory();\r\n    const {loading, request, error, clearError} = useHttp();\r\n    const [options, setOptions] = useState({schools: []});\r\n    const themes = [\r\n        {label: 'Оформление 1', value: 'style1'},\r\n        {label: 'Оформление 2', value: 'style2'},\r\n        {label: 'Оформление 3', value: 'style3'},\r\n        {label: 'Оформление 4', value: 'style4'}\r\n    ]\r\n    const [form, setForm] = useState({\r\n        school: '',\r\n        theme: {label: 'Оформление 1', value: 'style1'},\r\n    });\r\n\r\n    const getData = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/table/get_school`, 'GET', null);\r\n            setOptions(fetched);\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [request]);\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    }, [getData]);\r\n\r\n\r\n    const changeHandler = (event, action) => {\r\n        setForm({...form, [action.name]: event});\r\n    };\r\n    const viewHandler = () => {\r\n        if (form.school === '') {\r\n            message('Выберете школу')\r\n        } else {\r\n            history.push(`/view/${form.school.value}/${form.theme.value}`)\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div className={style.main}>\r\n            <svg className={style.logo}/>\r\n            <div className={style.form}>\r\n                <div className={style.title}>Настройки приложения</div>\r\n                <Select\r\n\r\n                    onChange={changeHandler}\r\n                    id=\"school\"\r\n                    placeholder=\"Выберите школу\"\r\n                    className={style.selector}\r\n                    options={options.schools}\r\n                    value={form.school}\r\n                    name=\"school\"\r\n                />\r\n                <Select\r\n                    onChange={changeHandler}\r\n                    id=\"theme\"\r\n                    placeholder=\"Выберите оформление расписания\"\r\n                    className={`${style.selector}`}\r\n                    options={themes}\r\n                    value={form.theme}\r\n                    name=\"theme\"\r\n                />\r\n                <Button\r\n                    className={`btn ${style.button}`}\r\n                    style={{marginRight: 10}}\r\n                    disabled={loading}\r\n                    onClick={viewHandler}\r\n                >\r\n                    Выбрать школу\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n};","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\hooks\\http.hook.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\hooks\\message.hook.js",[],["68","69"],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\components\\Loader.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\TimeBlock.js",["70","71","72","73"],"import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\n\r\nexport const TimeBlock = props => {\r\n\r\n\r\n    return (\r\n        <div className={props.style.timeBlock}>\r\n            <div className={props.style.hide}>|</div>\r\n            {Array.from(props.time, time => {\r\n                return <div\r\n                    key={time.index}\r\n                    className={`${props.style.lessonTime} ${time.index === props.time.length ? props.style.lastLessonTime : ''}`}\r\n                >\r\n                    {time.startTime}-{time.endTime}\r\n                </div>\r\n            })}\r\n        </div>\r\n    )\r\n}","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\ClassBlock.js",["74","75","76","77"],"import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\n\r\n\r\nexport const ClassBlock = props => {\r\n\r\n    return (\r\n        <div className={props.style.classBlock}>\r\n            <div className={props.style.className}>{props.classroomName}</div>\r\n            {Array.from(props.subjects, subject => {\r\n                return (<div className={props.style.subjectBlock} key={subject.index}>\r\n                        <div className={`${props.style.subject} ${subject.update && props.style.change}`}\r\n                        >{subject.name === '' ? '' : `${subject.name}`}</div>\r\n                        <div className={props.style.subjectOffice}>{subject.name === '' ? '' : `${subject.office}`}</div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\SpecialCourseTable.js",["78","79","80","81"],"import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\n\r\n\r\nexport const SpecialCourseTable = props => {\r\n\r\n    return (\r\n        <table className={props.style.courses}>\r\n            {props.course.specialCourse.length > 0 && <>\r\n                <thead>\r\n                <tr>\r\n                    <th className={props.style.hideTh}/>\r\n                    <th className={props.style.specCourses} colSpan=\"7\">Спецкурсы</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    {Array.from(props.course.specialCourse, course => {\r\n                        return (<>\r\n                                <td className={props.style.courseTime}>{course.time}</td>\r\n                                <td className={props.style.courseName}>{course.name}</td>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                </tbody>\r\n            </>}\r\n\r\n        </table>\r\n    )\r\n}",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"90","line":1,"column":40,"nodeType":"88","messageId":"89","endLine":1,"endColumn":46},{"ruleId":"86","severity":1,"message":"91","line":53,"column":12,"nodeType":"88","messageId":"89","endLine":53,"endColumn":29},{"ruleId":"92","severity":1,"message":"93","line":96,"column":8,"nodeType":"94","endLine":96,"endColumn":27,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":155,"column":5,"nodeType":"88","endLine":155,"endColumn":14,"suggestions":"97"},{"ruleId":"86","severity":1,"message":"98","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":39},{"ruleId":"86","severity":1,"message":"99","line":15,"column":30,"nodeType":"88","messageId":"89","endLine":15,"endColumn":35},{"ruleId":"86","severity":1,"message":"100","line":15,"column":37,"nodeType":"88","messageId":"89","endLine":15,"endColumn":47},{"ruleId":"82","replacedBy":"101"},{"ruleId":"84","replacedBy":"102"},{"ruleId":"86","severity":1,"message":"103","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"98","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":1,"column":41,"nodeType":"88","messageId":"89","endLine":1,"endColumn":50},{"ruleId":"86","severity":1,"message":"104","line":1,"column":52,"nodeType":"88","messageId":"89","endLine":1,"endColumn":60},{"ruleId":"86","severity":1,"message":"103","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"98","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":1,"column":41,"nodeType":"88","messageId":"89","endLine":1,"endColumn":50},{"ruleId":"86","severity":1,"message":"104","line":1,"column":52,"nodeType":"88","messageId":"89","endLine":1,"endColumn":60},{"ruleId":"86","severity":1,"message":"103","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"98","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":39},{"ruleId":"86","severity":1,"message":"87","line":1,"column":41,"nodeType":"88","messageId":"89","endLine":1,"endColumn":50},{"ruleId":"86","severity":1,"message":"104","line":1,"column":52,"nodeType":"88","messageId":"89","endLine":1,"endColumn":60},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'flagSpecialCourse' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'count.count'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAnnouncementText' needs the current value of 'count.count'.","ArrayExpression",["107"],"React Hook useEffect contains a call to 'setView'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [clockLauncher, view, announcementText.date, adImage.date, getData, getDataAnnouncement, getDataAd, getDataDirector, getSpecialCourses, announcementSwitcher, adSwitcher] as a second argument to the useEffect Hook.",["108"],"'useContext' is defined but never used.","'error' is assigned a value but never used.","'clearError' is assigned a value but never used.",["105"],["106"],"'useCallback' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [request, schoolId, count.count]",{"range":"113","text":"114"},"Add dependencies array: [clockLauncher, view, announcementText.date, adImage.date, getData, getDataAnnouncement, getDataAd, getDataDirector, getSpecialCourses, announcementSwitcher, adSwitcher]",{"range":"115","text":"116"},[3879,3898],"[request, schoolId, count.count]",[6302,6302],", [clockLauncher, view, announcementText.date, adImage.date, getData, getDataAnnouncement, getDataAd, getDataDirector, getSpecialCourses, announcementSwitcher, adSwitcher]"]