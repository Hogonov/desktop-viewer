[{"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\index.js":"1","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\reportWebVitals.js":"2","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\App.js":"3","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\routes.js":"4","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\ViewPage.js":"5","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\SelectViewPage.js":"6","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\hooks\\http.hook.js":"7","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\hooks\\message.hook.js":"8","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\components\\Loader.js":"9","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\TimeBlock.js":"10","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\ClassBlock.js":"11","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\SpecialCourseTable.js":"12"},{"size":287,"mtime":1611564706128,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":332,"mtime":1619158685697,"results":"16","hashOfConfig":"14"},{"size":504,"mtime":1617024016280,"results":"17","hashOfConfig":"14"},{"size":10832,"mtime":1619158088242,"results":"18","hashOfConfig":"14"},{"size":2598,"mtime":1619158088255,"results":"19","hashOfConfig":"14"},{"size":1069,"mtime":1601362997983,"results":"20","hashOfConfig":"14"},{"size":192,"mtime":1610445345776,"results":"21","hashOfConfig":"14"},{"size":579,"mtime":1619156839503,"results":"22","hashOfConfig":"14"},{"size":1080,"mtime":1619158088221,"results":"23","hashOfConfig":"14"},{"size":1124,"mtime":1619158088214,"results":"24","hashOfConfig":"14"},{"size":1087,"mtime":1619158088299,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1uxm1r4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"28"},"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\index.js",[],["56","57"],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\reportWebVitals.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\App.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\routes.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\ViewPage.js",["58","59"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport style from './Themes/style.module.css'\r\nimport {TimeBlock} from \"./TimeBlock\";\r\nimport {ClassBlock} from \"./ClassBlock\";\r\nimport {SpecialCourseTable} from \"./SpecialCourseTable\";\r\nimport settings from '../config/settings.json'\r\n\r\n\r\nexport const ViewPage = () => {\r\n    const {request} = useHttp()\r\n    const sizeInLine = 8\r\n    const [indexPage, setIndexPage] = useState({index: 1, date: new Date()})\r\n    const [view, setView] = useState({\r\n        date: new Date(),\r\n        session: '',\r\n        editDate: '',\r\n        times: [],\r\n        classrooms: []\r\n    })\r\n    const [clock, setClock] = useState({\r\n        clock: new Date().toLocaleString(\"ru\", {hour: 'numeric', minute: 'numeric'}),\r\n        clockDate: new Date().toLocaleString(\"ru\", {year: 'numeric', month: 'long', day: 'numeric'}),\r\n        clockDay: new Date().toLocaleString(\"ru\", {weekday: 'long'})\r\n    })\r\n    const [announcement, setAnnouncement] = useState({\r\n        announcements: [],\r\n        announcementDir: ''\r\n    })\r\n    const [announcementText, setAnnouncementText] = useState({text: '', date: new Date() - 55000})\r\n    const [specialCourses, setSpecialCourses] = useState({day: '', course: []})\r\n    const [count, setCount] = useState({count: 0})\r\n    const [countAd, setCountAd] = useState({count: 0})\r\n    const [dir, setDir] = useState({name: '', text: '', urlImage: ''})\r\n\r\n    const [ad, setAd] = useState({ad: []})\r\n    const [adImage, setAdImage] = useState({url: '', date: new Date() - 70000})\r\n    const schoolId = useParams().id\r\n    const [school, setSchool] = useState({\r\n        name: ''\r\n    })\r\n\r\n    const [flagAd, setFlagAd] = useState(false)\r\n    const [flagDirImage, setFlagDirImage] = useState(false)\r\n    const [flagView, setFlagView] = useState(false)\r\n    const [flagAnnouncement, setFlagAnnouncement] = useState(false)\r\n    const [flagSpecialCourse, setFlagSpecialCourse] = useState(false)\r\n\r\n\r\n    const getData = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/view/get/${schoolId}/${sizeInLine}`, 'GET', null)\r\n            setView({...fetched, date: new Date()})\r\n            setView({...fetched, date: new Date()})\r\n            setFlagView(fetched.isDataReady)\r\n            setSchool({name: fetched.school})\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [schoolId, request])\r\n\r\n    const getDataDirector = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/dir/get_data/${schoolId}`, 'GET', null)\r\n            setDir({...fetched, urlImage: settings.url + fetched.urlImage})\r\n            setFlagDirImage(fetched.isDataReady)\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [schoolId, request])\r\n\r\n    const getDataAd = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/ad/get_data_ad/${schoolId}`,\r\n                'GET', null, {\"Content-Type\": \"text/plain\"})\r\n            setAd({ad: fetched.ad})\r\n            setFlagAd(fetched.isDataReady)\r\n        } catch (e) {\r\n        }\r\n    }, [schoolId, request])\r\n\r\n    const getDataAnnouncement = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/view/get_announcement/${schoolId}`, 'GET', null)\r\n            setAnnouncement(fetched)\r\n            setAnnouncementText({text: fetched.announcements[count.count], date: new Date()})\r\n            setFlagAnnouncement(fetched.isDataReady)\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [schoolId, request])\r\n\r\n    const getSpecialCourses = useCallback(async () => {\r\n        try {\r\n            const fetched = await request(`${settings.url}/api/special_course/get/${schoolId}`, 'GET', null)\r\n            setSpecialCourses(fetched)\r\n            setFlagSpecialCourse(fetched.isDataReady)\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [schoolId, request])\r\n\r\n\r\n    const clockLauncher = () => {\r\n        let timerID = setInterval(() => tick(), 60000)\r\n        return () => clearInterval(timerID)\r\n    };\r\n\r\n    const tick = () => {\r\n        let date = new Date()\r\n        setClock({\r\n            clock: date.toLocaleString(\"ru\", {hour: 'numeric', minute: 'numeric'}),\r\n            clockDate: date.toLocaleString(\"ru\", {year: 'numeric', month: 'long', day: 'numeric'}),\r\n            clockDay: date.toLocaleString(\"ru\", {weekday: 'long'})\r\n        })\r\n    }\r\n\r\n    const announcementSwitcher = () => {\r\n        try {\r\n            setAnnouncementText({text: announcement.announcements[count.count], date: new Date()})\r\n            setCount({count: count.count + 1})\r\n            if (count.count === announcement.announcements.length - 1) {\r\n                setCount({count: 0})\r\n            }\r\n        } catch (e) {\r\n        }\r\n    };\r\n\r\n    const classesSwitcher = () => {\r\n        try {\r\n            let number = indexPage.index + 1\r\n            if (number === view.classrooms.length) {\r\n                number = 1\r\n            }\r\n            setIndexPage({...indexPage, index: number, date: new Date()})\r\n        } catch (e) {\r\n        }\r\n    };\r\n\r\n    const adSwitcher = () => {\r\n        try {\r\n            setAdImage({url: `${settings.url}/api/ad/get/${ad.ad[countAd.count]._id}`, date: new Date()})\r\n            setFlagAd(true)\r\n            setCountAd({count: countAd.count + 1})\r\n            if (countAd.count === ad.ad.length - 1) {\r\n                setCountAd({count: 0});\r\n            }\r\n        } catch (e) {\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        try {\r\n            getData().then()\r\n            getDataDirector().then()\r\n            getDataAnnouncement().then()\r\n            getDataAd().then()\r\n            getSpecialCourses().then()\r\n        } catch (e) {\r\n\r\n        }\r\n    }, [getData, getDataDirector, getDataAnnouncement, getDataAd, getSpecialCourses])\r\n\r\n\r\n    useEffect(() => {\r\n        try {\r\n            clockLauncher()\r\n            if (new Date() - view.date >= 60000) {\r\n                setView({...view, date: new Date()})\r\n                getData().then()\r\n                getDataAnnouncement().then()\r\n                getDataAd().then()\r\n                getDataDirector().then()\r\n                getSpecialCourses().then()\r\n            }\r\n\r\n            if (new Date() - announcementText.date >= 60000) {\r\n                announcementSwitcher()\r\n            }\r\n            if (new Date() - indexPage.date >= 60000) {\r\n                classesSwitcher()\r\n            }\r\n            if (new Date() - adImage.date >= 60000) {\r\n                adSwitcher()\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n\r\n    }, [clockLauncher, announcementSwitcher, classesSwitcher, adSwitcher])\r\n\r\n    if (!flagAd || !flagDirImage || !flagView || !flagAnnouncement || !flagSpecialCourse) {\r\n        return <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <header className={style.header}>\r\n                <div className={style.timetable}>\r\n                    Расписание занятий\r\n                </div>\r\n                <hr className={style.hr}/>\r\n                <div id=\"time\" className={style.time}>\r\n                    {clock.clock} | {clock.clockDate} | {clock.clockDay} | <h6 style={{display: 'inline-block'}}\r\n                                                                               className={style.editDate}>{view.editDate}</h6>\r\n                </div>\r\n            </header>\r\n\r\n            <div className={style.container}>\r\n                <div className={style.logo}>\r\n                    <img width=\"10px\" src={dir.urlImage} alt=\"logo\"/>\r\n                    <div className={style.infBlock}>\r\n                        <div className={style.schoolName}>{school.name}</div>\r\n                        <div>\r\n                            <svg className={style.phone}/>\r\n                            {dir.phone}\r\n                        </div>\r\n                        <div>\r\n                            <svg className={style.email}/>\r\n                            {dir.email}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.attention}>\r\n                    <div className={style.mainAtt}>Объявление</div>\r\n                    <div className={style.txt}>{announcementText.text}</div>\r\n                </div>\r\n\r\n                <div className={style.director}>\r\n                    <h3>Директор</h3>\r\n                    <h5>{dir.name}</h5>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className={style.firstTable}>\r\n                <TimeBlock time={view.times} style={style}/>\r\n                {Array.from(view.classrooms[indexPage.index - 1] ? view.classrooms[indexPage.index - 1] : view.classrooms[0],\r\n                    classroom => {\r\n                    try {\r\n                        return (\r\n                            <div key={classroom.index}>\r\n                                <ClassBlock\r\n                                    style={style}\r\n                                    classroomName={classroom.name}\r\n                                    subjects={classroom.subjects}\r\n                                    time={view.times}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    } catch (e){\r\n\r\n                    }\r\n                    })}\r\n            </div>\r\n            <div className={style.secondTable}>\r\n                <TimeBlock time={view.times} style={style}/>\r\n                {Array.from(view.classrooms[indexPage.index] ? view.classrooms[indexPage.index] : view.classrooms[1],\r\n                    classroom => {\r\n                    try {\r\n                        return (\r\n                            <div key={classroom.index}>\r\n                                <ClassBlock\r\n                                    style={style}\r\n                                    classroomName={classroom.name}\r\n                                    subjects={classroom.subjects}\r\n                                    time={view.times}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    } catch (e) {\r\n\r\n                    }\r\n                })}\r\n            </div>\r\n\r\n\r\n            <footer className={style.foot}>\r\n                <SpecialCourseTable\r\n                    style={style}\r\n                    course={specialCourses}\r\n                />\r\n                <div className={style.ad}>\r\n                    <img src={adImage.url} alt=\"ad\"/>\r\n                </div>\r\n                <div className={style.qr}>\r\n                </div>\r\n            </footer>\r\n\r\n        </div>\r\n    )\r\n};","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\SelectViewPage.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\hooks\\http.hook.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\hooks\\message.hook.js",[],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\components\\Loader.js",[],["60","61"],"D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\TimeBlock.js",["62","63","64","65"],"import React from \"react\";\r\n\r\nexport const TimeBlock = props => {\r\n\r\n\r\n    return (\r\n        <div className={props.style.timeBlock}>\r\n            {Array.from(props.time, time => {\r\n                try {\r\n                    let classNameFirst = time.index === 1 ? props.style.firstLessonTime : ''\r\n                    let classNameLast = time.index === props.time.length ? props.style.lastLessonTime : ''\r\n                    let date = new Date()\r\n                    let timeEnd = time.endTime.split(':')\r\n                    date.setHours(timeEnd[0])\r\n                    date.setMinutes(timeEnd[1])\r\n                    let pastLesson = date < new Date() ? props.style.pastLesson : ''\r\n                    return <div\r\n                        key={time.index}\r\n                        className={`${props.style.lessonTime} ${classNameFirst} ${classNameLast} ${pastLesson}`}\r\n                    >\r\n                        {time.startTime}-{time.endTime}\r\n                    </div>\r\n                } catch (e) {\r\n\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\ClassBlock.js",["66","67","68","69"],"import React from \"react\";\r\n\r\n\r\nexport const ClassBlock = props => {\r\n\r\n    return (\r\n        <div className={props.style.classBlock}>\r\n            <div className={props.style.className}>{props.classroomName}</div>\r\n            {Array.from(props.subjects, subject => {\r\n                try {\r\n                    let classNameLast = subject.index === props.subjects.length ? props.style.lastSubjectBlock : ''\r\n                    return (<div\r\n                            className={`${props.style.subjectBlock} ${subject.update && props.style.change} ${classNameLast}`}\r\n                            key={subject.index}>\r\n                            <div className={`${props.style.subject} ${subject.update && props.style.change}`}\r\n                            >{subject.name === '' ? '' : `${subject.name}`}</div>\r\n                            <div\r\n                                className={props.style.subjectOffice}>{subject.name === '' ? '' : `${subject.office}`}</div>\r\n                        </div>\r\n                    )\r\n                } catch (e) {\r\n\r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n}","D:\\Projects\\SchoolSchedulViewer\\desktop-viewer\\src\\View\\SpecialCourseTable.js",["70","71","72","73"],"import React, {useCallback, useContext, useEffect, useState} from \"react\";\r\n\r\n\r\nexport const SpecialCourseTable = props => {\r\n\r\n    return (\r\n        <table className={props.style.courses}>\r\n            {props.course.specialCourse.length > 0 && <>\r\n                <thead>\r\n                <tr>\r\n                    <th className={props.style.hideTh}/>\r\n                    <th className={props.style.specCourses} colSpan=\"7\">Спецкурсы</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    {Array.from(props.course.specialCourse, course => {\r\n                        return (<>\r\n                                <td className={props.style.courseTime}>{course.time}</td>\r\n                                <td className={props.style.courseName}>{course.name}</td>\r\n                            </>\r\n                        )\r\n                    })}\r\n                </tr>\r\n                </tbody>\r\n            </>}\r\n\r\n        </table>\r\n    )\r\n}",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":94,"column":8,"nodeType":"80","endLine":94,"endColumn":27,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":195,"column":8,"nodeType":"80","endLine":195,"endColumn":74,"suggestions":"83"},{"ruleId":"74","replacedBy":"84"},{"ruleId":"76","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"90","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":39},{"ruleId":"86","severity":1,"message":"91","line":1,"column":41,"nodeType":"88","messageId":"89","endLine":1,"endColumn":50},{"ruleId":"86","severity":1,"message":"92","line":1,"column":52,"nodeType":"88","messageId":"89","endLine":1,"endColumn":60},{"ruleId":"86","severity":1,"message":"87","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"90","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":39},{"ruleId":"86","severity":1,"message":"91","line":1,"column":41,"nodeType":"88","messageId":"89","endLine":1,"endColumn":50},{"ruleId":"86","severity":1,"message":"92","line":1,"column":52,"nodeType":"88","messageId":"89","endLine":1,"endColumn":60},{"ruleId":"86","severity":1,"message":"87","line":1,"column":16,"nodeType":"88","messageId":"89","endLine":1,"endColumn":27},{"ruleId":"86","severity":1,"message":"90","line":1,"column":29,"nodeType":"88","messageId":"89","endLine":1,"endColumn":39},{"ruleId":"86","severity":1,"message":"91","line":1,"column":41,"nodeType":"88","messageId":"89","endLine":1,"endColumn":50},{"ruleId":"86","severity":1,"message":"92","line":1,"column":52,"nodeType":"88","messageId":"89","endLine":1,"endColumn":60},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'count.count'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAnnouncementText' needs the current value of 'count.count'.","ArrayExpression",["95"],"React Hook useEffect has missing dependencies: 'adImage.date', 'announcementText.date', 'getData', 'getDataAd', 'getDataAnnouncement', 'getDataDirector', 'getSpecialCourses', 'indexPage.date', and 'view'. Either include them or remove the dependency array. You can also do a functional update 'setView(v => ...)' if you only need 'view' in the 'setView' call.",["96"],["93"],["94"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},"Update the dependencies array to be: [request, schoolId, count.count]",{"range":"101","text":"102"},"Update the dependencies array to be: [clockLauncher, announcementSwitcher, classesSwitcher, adSwitcher, view, announcementText.date, indexPage.date, adImage.date, getData, getDataAnnouncement, getDataAd, getDataDirector, getSpecialCourses]",{"range":"103","text":"104"},[3728,3747],"[request, schoolId, count.count]",[6868,6934],"[clockLauncher, announcementSwitcher, classesSwitcher, adSwitcher, view, announcementText.date, indexPage.date, adImage.date, getData, getDataAnnouncement, getDataAd, getDataDirector, getSpecialCourses]"]